name: GHAction example  

on:
  workflow_dispatch:
  push:
    tags:
    - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  ci_step:
    name: Build, tag and push Docker image to DockerHub
    runs-on: ubuntu-latest
      
    steps:
      - 
        name: Check out the source_repo
        uses: actions/checkout@v4
      
      -
        name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_USERNAME }}/zadanie2
          flavor: latest=false
          tags: |
            type=sha,priority=100,prefix=sha-,format=short
            type=semver,priority=200,pattern={{version}}   

      - 
        name: QEMU set-up
        uses: docker/setup-qemu-action@v3

      - 
        name: Buildx set-up
        uses: docker/setup-buildx-action@v3

      - 
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zadanie2:cache 
          cache-to: |
            type=registry,ref=${{ vars.DOCKERHUB_USERNAME }}/zadanie2:cache  
          tags: ${{ steps.meta.outputs.tags }}
          
      -    
        name: Install Docker Scout
        run: |
          curl -fsSL https://raw.githubusercontent.com/docker/scout-cli/main/install.sh | sh

      -
        name: Scan Docker image for vulnerabilities using Docker Scout
        id: scout
        run: |
          output=$(docker scout quickview ${{ steps.meta.outputs.tags }})
          relevant_part=$(echo "$output" | awk '/â”‚/{flag=1} /digest/{flag=0} flag')
          high_critical_vulns=$(echo "$relevant_part" | grep -Eo '[0-9]+[CH]' | awk '{ if (substr($0, 1, length($0)-1) > 0) print $0 }' | wc -l)
          if [ "$high_critical_vulns" -gt 0 ]; then
            exit 1
          fi

      -
        name: Login to GitHub Container Registry
        if: success()  # Only run if the previous step was successful
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Push Docker image to GitHub Container Registry
        if: success()  # Only run if the previous step was successful
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: |
            type=registry,ref=ghcr.io/reflux121/zadanie2:cache
          cache-to: |
            type=registry,ref=ghcr.io/reflux121/zadanie2:cache
          tags: ghcr.io/reflux121/zadanie2:latest